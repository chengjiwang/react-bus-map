{"version":3,"sources":["api/EventService.js","features/bus/busSlice.js","features/bus/BusList/BusList.js","assets/svg/bus.svg","features/bus/Map/Map.js","features/bus/BusDetail/BusDetail.js","App.js","app/store.js","reportWebVitals.js","index.js"],"names":["apiClient","axios","create","baseURL","fetchBuses","createAsyncThunk","a","get","response","data","busSlice","createSlice","name","initialState","originalData","filterData","busDetail","status","updateTime","reducers","filterBus","state","action","filter","item","RouteName","Zh_tw","payload","detail","find","PlateNumb","extraReducers","fulfilled","Date","toISOString","actions","columns","title","dataIndex","sorter","b","localeCompare","ignorePunctuation","OperatorID","length","Speed","BusList","Option","Select","dispatch","useDispatch","routeName","sets","Set","forEach","add","Array","from","getRouteName","option","map","index","value","className","gutter","span","dataSource","rowKey","defaultValue","style","width","onChange","Map","busMarker","L","Icon","iconUrl","BusIcon","iconSize","Point","markers","location","BusPosition","PositionLat","PositionLon","Marker","position","icon","eventHandlers","click","e","selectItem","target","options","MapContainer","center","zoom","TileLayer","url","attribution","BusDetail","time","useSelector","bus","undefined","format","htmlFor","id","placeholder","App","useEffect","timerID","setInterval","clearInterval","configureStore","reducer","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","store","document","getElementById"],"mappings":"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","file":"static/js/main.fdec7916.chunk.js","sourcesContent":["import axios from 'axios';\n\nconst apiClient = axios.create({\n  baseURL: 'https://ptx.transportdata.tw/MOTC/v2/Bus/RealTimeByFrequency/Streaming/City/Chiayi'\n});\n\nexport const apiGetBuses = () => apiClient.get('/');\n","import { createSlice, createAsyncThunk } from '@reduxjs/toolkit';\nimport { apiGetBuses } from 'api/EventService';\n\nconst initialState = {\n  originalData: [],\n  filterData: [],\n  busDetail: {},\n  status: 'idle',\n  updateTime: ''\n};\n\nexport const fetchBuses = createAsyncThunk('bus/fetchBuses', async () => {\n  const response = await apiGetBuses();\n  return response.data\n});\n\nconst busSlice = createSlice({\n  name: 'bus',\n  initialState,\n  reducers: {\n    filterBus(state, action) {\n      const filterBus = state.originalData.filter(\n        item => item.RouteName.Zh_tw === action.payload\n      );\n      if (filterBus) {\n        state.filterData = filterBus;\n      }\n    },\n    busDetail(state, action) {\n      const detail = state.originalData.find(\n        item => item.PlateNumb === action.payload\n      );\n      state.busDetail = detail;\n    },\n  },\n  extraReducers: {\n    [fetchBuses.fulfilled]: (state, action) => {\n      state.status = 'succeeded';\n      state.originalData = action.payload;\n      state.filterData = action.payload;\n      state.updateTime = new Date().toISOString();\n    }\n  }\n});\n\nexport const { filterBus, busDetail } = busSlice.actions;\nexport default busSlice.reducer;\n","import React from 'react';\nimport { useDispatch } from 'react-redux';\nimport { Row, Col, Table, Select } from 'antd';\n\nimport { filterBus } from 'features/bus/busSlice';\nimport './busList.scss';\n\nconst columns = [\n  {\n    title: '車牌號碼',\n    dataIndex: 'PlateNumb',\n    sorter: (a, b) => a.PlateNumb.localeCompare(b.PlateNumb, 'co', {ignorePunctuation: true}),\n  },\n  {\n    title: '駕駛ID',\n    dataIndex: 'OperatorID',\n    sorter: (a, b) => a.OperatorID - b.OperatorID,\n  },\n  {\n    title: '行車路線',\n    dataIndex: ['RouteName', 'Zh_tw'],\n    sorter: (a, b) => a.RouteName.Zh_tw.length - b.RouteName.Zh_tw.length,\n  },\n  {\n    title: '行車速度 km/h',\n    dataIndex: 'Speed',\n    sorter: (a, b) => a.Speed - b.Speed,\n  },\n];\n\nexport const BusList = ({ originalData, filterData }) => {\n  const { Option } = Select;\n  const dispatch = useDispatch();\n  let routeName = [];\n  const getRouteName = () => {\n    const sets = new Set();\n    originalData.forEach((item) => {\n      sets.add(item.RouteName.Zh_tw);\n    });\n    routeName = Array.from(sets);\n  }\n  getRouteName();\n\n  const option = routeName.map((item, index) => {\n    return (\n      <Option value={item} key={index}>{item}</Option>\n    )\n  });\n\n  const handleRouteChange = (value) => {\n    dispatch(filterBus(value));\n  };\n\n  return (\n    <div className=\"list\">\n      <Row gutter={32}>\n        <Col span={18}>\n          <Table \n            columns={columns} \n            dataSource={filterData} \n            rowKey=\"PlateNumb\"  \n          />\n        </Col>\n        <Col span={6} className=\"filter\">\n          <h2 className=\"filter-title\">Filter</h2>\n          <Select\n            defaultValue=\"行車路線\" \n            style={{ width: 170 }}\n            onChange={handleRouteChange}\n          >\n            {option}\n          </Select>\n        </Col>\n      </Row> \n    </div>    \n  )\n}\n","export default __webpack_public_path__ + \"static/media/bus.bef1af57.svg\";","import React from 'react';\nimport { useDispatch } from 'react-redux';\nimport L from 'leaflet';\nimport 'leaflet/dist/leaflet.css'; \nimport { MapContainer, TileLayer, Marker } from 'react-leaflet';\nimport MarkerClusterGroup from 'react-leaflet-markercluster';\nimport 'react-leaflet-markercluster/dist/styles.min.css'; \n\nimport { busDetail } from 'features/bus/busSlice';\nimport BusIcon from 'assets/svg/bus.svg';\nimport './map.scss';\n\nexport const Map = ({filterData}) => {\n  const dispatch = useDispatch();\n  const busMarker = new L.Icon({\n    iconUrl: BusIcon,\n    iconSize: new L.Point(40, 40),\n  });\n\n  const markers =  filterData.map(item => {\n    const location = [item.BusPosition.PositionLat, item.BusPosition.PositionLon];\n    return (\n      <Marker \n        position={location}\n        key= {item.PlateNumb}\n        data={item.PlateNumb} \n        icon={busMarker}\n        eventHandlers={{\n          click: (e) => {\n            const selectItem = e.target.options.data;\n            dispatch(busDetail(selectItem));\n          },\n        }}\n      />\n    )\n  })\n  \n  return (\n    <MapContainer \n      center={[23.4792933333333, 120.437648333333]} \n      zoom={11} \n      className=\"map\"\n    >\n      <TileLayer\n        url=\"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\"\n        attribution='&copy; <a href=\"http://osm.org/copyright\">OpenStreetMap</a> contributors'\n      />\n      <MarkerClusterGroup>\n        {markers}\n      </MarkerClusterGroup>     \n    </MapContainer>\n  )\n}\n\n\n","import React from 'react';\nimport { useSelector } from 'react-redux';\nimport { Input } from 'antd';\nimport { format } from 'date-fns';\n\nimport './busDetail.scss';\n\nexport const BusDetail = ({ busDetail }) => {\n  const time = useSelector(state => state.bus.updateTime);\n  const RouteName = busDetail.RouteName === undefined ? '' : busDetail.RouteName.Zh_tw;\n  let updateTime = time ? format(new Date(time), 'MM/dd H:mm') : '';\n  \n  return (\n    <div className=\"detail\">\n      <label htmlFor=\"plateNumb\">車牌號碼</label>\n      <Input \n        id=\"plateNumb\" \n        value={busDetail.PlateNumb} \n        className=\"detail-input\" \n        placeholder=\"車牌號碼\" \n      />\n      <label htmlFor=\"operatorID\">駕駛ID</label>\n      <Input \n        id=\"operatorID\" \n        value={busDetail.OperatorID} \n        className=\"detail-input\" \n        placeholder=\"駕駛ID\" \n      />\n      <label htmlFor=\"routeName\">行車路線</label>\n      <Input \n        id=\"routeName\" \n        value={RouteName} \n        className=\"detail-input\" \n        placeholder=\"行車路線\" \n      />\n      <label htmlFor=\"speed\">行車速度</label>\n      <Input \n        id=\"speed\" \n        value={busDetail.Speed} \n        className=\"detail-input\" \n        placeholder=\"行車速度\" \n      />\n      <div className=\"update-time\">\n        <span>最後更新 { updateTime }</span>\n      </div>    \n    </div>\n  )\n}\n\n","import './App.css';\nimport React, { useEffect } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { Row, Col } from 'antd';\n\nimport { fetchBuses } from 'features/bus/busSlice';\nimport { BusList } from 'features/bus/BusList/BusList';\nimport { Map } from 'features/bus/Map/Map';\nimport { BusDetail } from 'features/bus/BusDetail/BusDetail';\nimport 'antd/dist/antd.css';\n\nfunction App() {\n  const dispatch = useDispatch();\n  const originalData = useSelector(state => state.bus.originalData);\n  const filterData = useSelector(state => state.bus.filterData);\n  const busDetail = useSelector(state => state.bus.busDetail)\n  const status = useSelector(state => state.bus.status);\n  \n  useEffect(() => {\n    if(status === 'idle') {\n      dispatch(fetchBuses());\n    }\n    let timerID = setInterval(\n      () => dispatch(fetchBuses()),\n      600000\n    );\n    return function cleanup() {\n      clearInterval(timerID);\n    };\n  }, [status, dispatch]);\n  \n  return (\n    <div className=\"app\">\n      <h1>嘉義市 Live Bus Map</h1>\n      <Row gutter={32}>\n        <Col span={6}>\n          <BusDetail busDetail={busDetail} />\n        </Col>\n        <Col span={18}>\n          <Map filterData={filterData} />\n        </Col>\n      </Row>\n      <Row>\n        <Col span={24}>\n          <BusList \n            originalData={originalData} \n            filterData={filterData} \n          />\n        </Col>\n      </Row>  \n    </div>\n  );\n}\n\nexport default App;\n","import { configureStore } from '@reduxjs/toolkit';\nimport busSlice from 'features/bus/busSlice';\n\nexport default configureStore({\n  reducer: {\n    bus: busSlice\n  }\n});\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport store from './app/store';\nimport { Provider } from 'react-redux';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}